/* Design a cash register drawer function checkCashRegister() that accepts purchase price as the first argument (price), payment as the second argument (cash), and cash-in-drawer (cid) as the third argument.

cid is a 2D array listing available currency.

The checkCashRegister() function should always return an object with a status key and a change key.

Return {status: "INSUFFICIENT_FUNDS", change: []} if cash-in-drawer is less than the change due, or if you cannot return the exact change.

Return {status: "CLOSED", change: [...]} with cash-in-drawer as the value for the key change if it is equal to the change due.

Otherwise, return {status: "OPEN", change: [...]}, with the change due in coins and bills, sorted in highest to lowest order, as the value of the change key. 

Ex. cid [
  ["PENNY", 1.01],
  ["NICKEL", 2.05],
  ["DIME", 3.1],
  ["QUARTER", 4.25],
  ["ONE", 90],
  ["FIVE", 55],
  ["TEN", 20],
  ["TWENTY", 60],
  ["ONE HUNDRED", 100]
] */

function checkCashRegister(price, cash, cid) {
  let drawerEnum = [1, 5, 10, 25, 100, 500, 1000, 2000, 10000];
  let changeCents = (cash - price) * 100;
  let drawerCents = 0;
  let changeArray = [];
  for(let i in cid){
    drawerCents += (cid[i][1] * 100);
  }
  if(changeCents == drawerCents){
    return {status: "CLOSED", change: cid};
  }
  for(let i = 8; i >= 0; i--){
    let unitCents = drawerEnum[i];
    let numUnits = Math.min(Math.floor(changeCents / unitCents), 
    (cid[i][1] * 100 / unitCents)); 
    if(numUnits){
      changeCents -= unitCents * numUnits;
      changeArray.push([cid[i][0], numUnits * unitCents / 100]);
    }
  }
  if(changeCents){
    return {status: "INSUFFICIENT_FUNDS", change: []};
  }
  return {status: "OPEN", change: changeArray};
}
